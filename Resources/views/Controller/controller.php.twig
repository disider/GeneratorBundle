<?php

namespace {{ namespace }}\Controller;

{% block use_statements %}
use Symfony\Component\HttpFoundation\Request;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;
{% if filters %}
use {{ namespace }}\Form\Filter\{{ entity }}FilterForm;
{% endif %}
{% if security %}
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Security;
{% endif %}
use {{ namespace }}\Form\Processor\DefaultFormProcessor;
use {{ namespace }}\Entity\{{ entity }};
{% endblock use_statements %}

/**
 * @Route("/{{ path|pluralize }}")
{% if security %}
 * @Security("is_granted('IS_AUTHENTICATED_REMEMBERED')")
{% endif %}
 */
{% block class_definition %}
class {{ entity }}Controller extends BaseController
{% endblock class_definition %}
{
{% block class_body %}

    /**
     * @Route(name="{{ route_prefix|pluralize }}")
     * @Template
     */
    public function indexAction(Request $request)
    {
        $page = $request->get('page', 1);
        $pageSize = $this->container->getParameter('page_size');

        $query = $this->get('{{ route_prefix }}_repository')->findAllQuery();
        {% if filters %}

        $filterForm = $this->buildFilterForm($request, $query, new {{ entity }}FilterForm());
        {% endif %}

        $pagination = $this->paginate($query, $page, $pageSize);

        return array(
            'pagination' => $pagination,
        {%- if filters %}

        'filterForm' => $filterForm->createView(),
        {%- endif %}

        );
    }

    /**
     * @Route("/new", name="{{ route_prefix }}_new")
     * @Template
     */
    public function newAction(Request $request)
    {
        return $this->processForm($request, new {{ entity }}());
    }

    /**
     * @Route("/{id}/edit", name="{{ route_prefix }}_edit")
     * @Template
     */
    public function editAction(Request $request, {{ entity }} $entity)
    {
        return $this->processForm($request, $entity);
    }

    /**
     * @Route("/{id}/delete", name="{{ route_prefix }}_delete")
     */
    public function deleteAction({{ entity }} $entity)
    {
        $this->get('{{ route_prefix }}_repository')->delete($entity);
        $this->addFlash('success', 'flash.{{ route_prefix }}.deleted');

        return $this->redirectToRoute('{{ route_prefix|pluralize }}');
    }

    protected function processForm(Request $request, {{ entity }} $entity = null)
    {
        $processor = $this->get('{{ route_prefix }}_form_processor');

        $processor->process($request, $entity);

        if ($processor->isValid()) {
            $this->addFlash('success', $processor->isNew() ? 'flash.{{ route_prefix }}.created' : 'flash.{{ route_prefix }}.updated');

            if($processor->isRedirectingTo(DefaultFormProcessor::REDIRECT_TO_LIST))
                return $this->redirectToRoute('{{ route_prefix|pluralize }}');

            return $this->redirectToRoute('{{ route_prefix }}_edit', array('id' => $processor->getData()->getId()));
        }

        $form = $processor->getForm();

        return array(
            'form' => $form->createView()
        );
    }

{% endblock class_body %}
}
